##
# SSL Enabled Configuration
##
server {
	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
	server_name {DOMAIN_NAME}; # managed by Certbot

	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'private no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;

	location / {
		##
		# Local instances that will extract out
		# the information from the TLS handshake
		# and any other common info to produce
		# a secret to be shared later
		##
		# Our Main Processing Server
		proxy_pass http://localhost:8000;
		# Variables we're interested in
		# c_csuites = Client Supported Cipher Suites
		# c_curves = Client Supported Curves
		# s_proto = Shared TLS Protocol
		# s_session = Shared TLS Session ID
		# s_csuite = Shared Cipher Suite
		# c_port = Client's Port (inbound to proxy)
		# s_ip = Server IP, from Client's Perspective
		# tcp_rtt = TCP round trip time
		proxy_set_header Forwarded "$forwarded_proxy;c_csuites=$ssl_ciphers;c_curves=$ssl_curves;s_proto=$ssl_protocol;s_session=$ssl_session_id;s_csuite=$ssl_cipher;c_port=$remote_port;s_ip=$server_addr;tcp_rtt=$tcpinfo_rtt;uri=$uri";
	}


	## 
	# Let's Encrypt will automatically add the following
	# settings to keep the server as updated as possible
	# These settings are added via the include below
	# 
	# ssl_session_cache shared:le_nginx_SSL:10m;
	# ssl_session_timeout 1440m;
	# ssl_session_tickets off;
	# 
	# ssl_protocols TLSv1.2 TLSv1.3;
	# ssl_prefer_server_ciphers off;
	# 
	# ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
	##
	##
	# The following settings are automatically added by 
	# Certbot, and managed by it (and will replace domain_name with your domain name)
	##
	listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/{DOMAIN_NAME}/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/{DOMAIN_NAME}/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	##
}

##
# Default Configuration
# Redirect from HTTP -> HTTPS
# Certbot automatically adds this as well
# and will continue to manage it
##
server {
	if ($host = {DOMAIN_NAME}) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	listen 80 ;
	listen [::]:80 ;
	server_name {DOMAIN_NAME};
	return 404; # managed by Certbot
}
